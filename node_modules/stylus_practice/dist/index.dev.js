"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var uniqueArr = [];

function removeArrayDuplicates(arr) {
  // Accepts an array from which the duplicates
  // will be removed
  if (!Array.isArray(arr)) {
    arr = [];
  }

  var theSet = new Set(arr);

  var uniqueArr = _toConsumableArray(theSet);

  return uniqueArr;
}

module.exports = removeArrayDuplicates;

var style = require('stylus_practice');